@import "defs";
@import "colors";

.modern {
  font-family: "Segoe UI", sans-serif;
  font-weight: 400;
  font-size: 16px;

  & * {
    @include standard-transition(background-color, color, opacity, border);
  }

  .tip {
    font-size: 0.8em;
    font-style: italic;
  }

  b {
    font-weight: 600;
  }

  h1, h2, h3, h4, h5, h6 {
    margin: 0 0 0.5em 0;
  }

  h1, .h1 {
    font-size: 3.5em;
    font-weight: 200;
  }

  h2, .h2 {
    font-size: 3em;
    font-weight: 300;
  }

  h3, .h3 {
    font-size: 2.5em;
    font-weight: 300;
  }

  h4, .h4 {
    font-size: 2em;
    font-weight: 300;
  }

  h5, .h5 {
    font-size: 1.5em;
    font-weight: 300;
  }

  h6, .h6 {
    font-size: 1.25em;
    font-weight: 300;
  }

  ul, ol {
    margin: 1em 0;
    padding: 0 0 0 2em;
  }

  ul {
    list-style: none;

    li {
      position: relative;

      &::before {
        content: '';
        display: block;
        width: 0.5em;
        height: 0.5em;
        position: absolute;
        top: 0.5em;
        left: -1em;
        @include standard-transition(background-color);
      }
    }
  }

  a {
    font-weight: 600;

    &:hover {
      outline: 0;
      transition-duration: $fade-in;
    }

    &:active {
      transition-duration: 0ms;
    }
  }

  label {
    white-space: nowrap;
  }

  button,
  input[type="button"],
  input[type="submit"] {
    @include control-size($button-padding);
    border: 0;
    margin: $control-margin 0;
    outline: 0;
    font-family: inherit;
    font-size: inherit;
    font-weight: 600;
    transition-timing-function: ease-out;

    &:enabled {
      @include control-pointer;

      &:hover {
        transition-duration: $fade-in;
      }
  
      &:active {
        transition-duration: 0ms;
      }
    }

    &:disabled {
      opacity: $disabled-opacity;
    }
  }

  input[type="submit"] {
    font-weight: 600;
  }

  input[type="text"],
  textarea {
    @include control-size($textbox-padding);
    border: $control-border solid;
    margin: $control-margin 0;
    outline: 0;
    font-family: inherit;
    font-size: inherit;
    font-weight: inherit;

    &::placeholder {
      font-style: italic;
      color: inherit;
      opacity: 0.7;
    }

    // prefix selectors must be separate rulesets
    &:-moz-read-only {
      background-color: transparent;
    }
    &:read-only {
      background-color: transparent;
    }
    
    &:disabled {
      opacity: $disabled-opacity;
    }
  }

  input[type="checkbox"],
  input[type="radio"] {
    @include invisible;

    & + label {
      margin: $control-margin 0;

      & > .check {
        display: inline-block;
        position: relative;
        @include border-box;
        margin: 0 0.5em;
        
        border: $control-border solid;

        &.small {
          width: 0.75em;
          height: 0.75em;
          top: 0;
        }
    
        &, &.medium {
          width: 1em;
          height: 1em;
          top: 0.15em;
        }
    
        &.large {
          width: 1.25em;
          height: 1.25em;
          top: 0.25em;
        }
      }
    }
    
    &:checked + label > .check {
      border-width: 0.2em;
  
      &.large {
        border-width: 0.25em;
      }
    }

    &:enabled {
      & + label > .check {
        @include control-pointer;
      }

      & + label:hover > .check {
        transition-duration: $fade-in;
      }
  
      &:active + label > .check {
        transition-duration: 0ms;
      }
    }

    &:disabled + label > .check {
      opacity: $disabled-opacity;
    }
  }

  input[type="checkbox"] {
    &:indeterminate + label > .check {
      &.small {
        border-width: 0.3em $control-border;
      }

      &, &.medium {
        border-width: 0.4em $control-border;
      }

      &.large {
        border-width: 0.5em $control-border;
      }
    }
  }

  input[type="radio"] {
    & + label {
      & > .check.small {
        border-radius: 0.375em;
      }
  
      & > .check,
      & > .check.medium {
        border-radius: 0.5em;
      }
  
      & > .check.large {
        border-radius: 0.625em;
      }
    }
  }

  select {
    @include control-size($textbox-padding);
    padding-right: 2em;
    border-width: $control-border;
    border-style: solid;
    outline: 0;
    font-family: inherit;
    font-size: inherit;
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background-position:
      calc(100% - 1em) 54%,
      calc(100% - 0.5em) 54%;
    background-size:
      0.5em 0.5em,
      0.5em 0.5em;
    background-repeat: no-repeat;

    &:enabled {
      @include control-pointer;
    }
    
    &:disabled {
      opacity: $disabled-opacity;
    }
  }

  fieldset {
    border-width: $control-border;
    margin: 0;
    padding: 0.5em 1em;

    legend {
      padding: 0 0.5em;
      font-size: 120%;
      font-weight: 300;
    }
  }
  
  .segmented-radio-group {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;

    &.inline {
      display: inline-flex;
    }

    label {
      display: block;
      border-width: $control-border;
      border-style: solid;
      padding: ($control-height - 1) / 2 - $control-border $button-padding;
      line-height: 1em;
      text-align: center;
    }

    label:not(:first-of-type) {
      border-left: none;
    }
    
    input {
      &:enabled {
        & + label {
          @include control-pointer;
        }
  
        & + label:hover {
          transition-duration: $fade-in;
        }
  
        &:active + label {
          transition-duration: 0ms;
        }
      }

      &:disabled + label {
        opacity: $disabled-opacity;
      }
    }
  }

  .tile-container {
    display: flex;
    margin: -0.125em;
    flex-wrap: wrap;
  }

  .tile,
  .tile-group {
    @include border-box;
    display: flex;
    flex-wrap: wrap;
    align-content: flex-start;
    justify-content: flex-start;
    border: 0;
  }

  .tile {
    flex-shrink: 0;
    margin: 0.125em;
    padding: 0.5em;

    &.small {
      width: 2.875em;
      height: 2.875em;
    }

    &, &.medium {
      width: 6em;
      height: 6em;
    }

    &.wide {
      width: 12.25em;
      height: 6em;
    }

    &.large {
      width: 12.25em;
      height: 12.25em;
    }
  }

  .tile-group {
    flex-shrink: 1;
    flex-basis: 0;

    &.small {
      flex-basis: auto;
      max-width: 3.25em;
    }

    &.medium {
      flex-basis: auto;
      max-width: 6.25em;
    }

    &.wide,
    &.large {
      flex-basis: auto;
      max-width: 12.5em;
    }
  }

  @include modern-colors;
}

.noselect {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  -o-user-select: none;
  user-select: none;
}

.block {
  display: block;
}

.inline {
  display: inline;
}

.inline-block {
  display: inline-block;
}

.flex {
  display: flex;
}